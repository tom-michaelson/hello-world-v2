---
name: Build and Upload

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: checkout code
      - name: setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '10.0.x'
      - run: dotnet build HelloWorldV2.csproj
        name: build app
      - uses: actions/upload-artifact@v4
        name: upload artifact
        with:
          name: hello-world-app
          path: bin/Debug/net10.0/
      - name: Build the docker Image
        run: docker build . --file Dockerfile --tag hello-world-v2:$(date +%s)
      - run: dotnet test
        name: run tests
  docker-build:
    needs: build
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=true

      - name: Download build artifacts
        uses: actions/download-artifact@v5
        with:
          name: hello-world-app
          path: bin/Debug/net10.0/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v3
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.node-version }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
